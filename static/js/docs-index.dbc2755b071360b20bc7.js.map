{"version":3,"sources":["D:/personal/githubrepo/switch/src/SwitchTrack.tsx","D:/personal/githubrepo/switch/src/SwitchLabel.tsx","D:/personal/githubrepo/switch/src/Switch.tsx","D:/personal/githubrepo/switch/src/index.ts","D:/personal/githubrepo/switch/docs/Demo.tsx","D:/personal/githubrepo/switch/docs/SwitchDemo.tsx","D:/personal/githubrepo/switch/docs/index.mdx"],"names":["checkedStyle","css","props","getColorFromTheme","color","theme","disabled","disabledStyle","checked","SwitchTrack","styled","span","palette","type","transitions","create","duration","shortest","black","white","getHoverBgColor","mainColor","typography","button","getColor","Color","alpha","rgb","string","checkedWrapperStyle","disabledWrapperStyle","SwitchLabelWrapper","SwitchLabel","inputClassName","name","value","onChange","inputProps","inputRef","rippleRef","useRipple","center","fixSize","rippleClassName","rippleLayoutClassName","ref","className","classNames","Wrapper","Switch","Demo","useState","setChecked","handleChange","useCallback","event","target","SwitchDemo","switch3","newChecked","switch1","switch2","switch4","switch5","switch6","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","alt","src","__position","__code","__scope","this","Playground","isMDXComponent"],"mappings":"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","file":"static/js/docs-index.bf279443.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { getColorFromTheme } from 'sinoui-components/utils/colors';\n\nexport interface SwitchTrackProps {\n  disabled?: boolean;\n  checked?: boolean;\n  color?: string;\n}\n\nconst checkedStyle = css<SwitchTrackProps>`\n  background-color: ${(props) =>\n    getColorFromTheme({\n      color: props.color || 'primary',\n      theme: props.theme,\n      disabled: props.disabled,\n    })};\n  opacity: 0.5;\n`;\n\nconst disabledStyle = css<SwitchTrackProps>`\n  opacity: ${(props) => (props.checked ? 0.5 : 0.12)};\n`;\n\nconst SwitchTrack = styled.span<SwitchTrackProps>`\n  width: 100%;\n  height: 100%;\n  opacity: ${(props) => (props.theme.palette.type === 'light' ? 0.38 : 0.3)};\n  z-index: -1;\n  transition: ${(props) =>\n    props.theme.transitions.create(['opacity', 'background-color'], {\n      duration: props.theme.transitions.duration.shortest,\n    })};\n  border-radius: 7px;\n  background-color: ${(props) =>\n    props.theme.palette.type === 'light'\n      ? props.theme.palette.black\n      : props.theme.palette.white};\n\n  ${(props) => props.checked && checkedStyle};\n  ${(props) => props.disabled && disabledStyle};\n`;\n\nexport default SwitchTrack;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\nimport { getColorFromTheme } from 'sinoui-components/utils/colors';\nimport Color from 'color';\nimport { Theme } from 'sinoui-components/styles';\n\nexport interface Props {\n  inputClassName?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  name?: string;\n  value?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  inputRef?: React.Ref<HTMLInputElement>;\n  /**\n   * 给input元素应用上新的属性\n   */\n  inputProps?: React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >;\n  color?: string;\n}\n\ninterface WrapperProps {\n  checked?: boolean;\n  disabled?: boolean;\n  color?: string;\n  theme: Theme;\n}\n\nfunction getColor(props: WrapperProps) {\n  return getColorFromTheme(props, props.theme.typography.button.color);\n}\n\nexport const getHoverBgColor = (props: WrapperProps) => {\n  const mainColor = getColor(props);\n  if (mainColor && mainColor !== 'inherit' && mainColor !== 'currentColor') {\n    return Color(mainColor)\n      .alpha(0.12)\n      .rgb()\n      .string();\n  }\n  return null;\n};\n\nconst checkedWrapperStyle = css<WrapperProps>`\n  transform: translateX(50%);\n  color: ${(props) =>\n    getColorFromTheme({\n      color: props.color || 'primary',\n      theme: props.theme,\n      disabled: props.disabled,\n    })};\n\n  &:hover {\n    background-color: ${(props) =>\n      getHoverBgColor({\n        color: props.color || 'primary',\n        theme: props.theme,\n        disabled: props.disabled,\n      })};\n  }\n`;\n\nconst disabledWrapperStyle = css<WrapperProps>`\n  color: ${(props) =>\n    props.theme.palette.type === 'light' ? '#bdbdbd' : '#424242'};\n\n  &:hover {\n    background-color: transparent;\n  }\n`;\n\nconst SwitchLabelWrapper = styled.span<WrapperProps>`\n  display: flex;\n  align-items: inherit;\n  justify-content: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: ${(props) =>\n    props.theme.palette.type === 'light' ? ' #fafafa' : '#bdbdbd'};\n  z-index: 1;\n  transition: ${(props) =>\n    props.theme.transitions.create(['left', 'transform'], {\n      duration: props.theme.transitions.duration.shortest,\n    })};\n  padding: 9px;\n  border-radius: 50%;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n\n  ${(props) => props.checked && checkedWrapperStyle};\n  ${(props) => props.disabled && disabledWrapperStyle};\n\n  & .sinoui-switch__input {\n    top: 0;\n    left: -100%;\n    width: 300%;\n    cursor: inherit;\n    height: 100%;\n    margin: 0;\n    opacity: 0;\n    padding: 0;\n    z-index: 1;\n    position: absolute;\n  }\n\n  & .sinoui-switch__thumb {\n    width: 20px;\n    height: 20px;\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .sinoui-switch__ripple {\n    width: 38px;\n    height: 38px;\n  }\n`;\n\n/**\n * 开关控件标签组件，主要包括小圆点\n *\n * @export\n * @param {Props} props\n * @returns\n */\nexport default function SwitchLabel(props: Props) {\n  const {\n    inputClassName,\n    checked,\n    disabled,\n    color,\n    name,\n    value,\n    onChange,\n    inputProps,\n    inputRef,\n  } = props;\n\n  const rippleRef = useRipple<HTMLSpanElement>({\n    center: true,\n    fixSize: true,\n    rippleClassName: 'sinoui-switch__ripple',\n    rippleLayoutClassName: 'sinoui-switch__riple-layout',\n    disabled,\n  });\n\n  return (\n    <SwitchLabelWrapper\n      ref={rippleRef}\n      checked={checked}\n      disabled={disabled}\n      color={color}\n      className=\"sinoui-switch__label\"\n    >\n      <input\n        type=\"checkbox\"\n        name={name}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n        value={value}\n        ref={inputRef}\n        {...inputProps}\n        className={classNames('sinoui-switch__input', inputClassName)}\n      />\n      <span className=\"sinoui-switch__thumb\" />\n    </SwitchLabelWrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport SwitchTrack from './SwitchTrack';\nimport SwitchLabel from './SwitchLabel';\n\ninterface SwitchProps {\n  color?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  value: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Wrapper = styled.span<{ disabled?: boolean }>`\n  width: 58px;\n  height: 38px;\n  display: inline-flex;\n  padding: 12px;\n  z-index: 0;\n  overflow: hidden;\n  position: relative;\n  box-sizing: border-box;\n  flex-shrink: 0;\n  vertical-align: middle;\n  cursor: ${(props) => (props.disabled ? 'default' : 'pointer')};\n`;\n\n/**\n * 开关控件\n *\n * @export\n * @param {SwitchProps} props\n * @returns\n */\nexport default function Switch(props: SwitchProps) {\n  const { disabled, checked, color } = props;\n  return (\n    <Wrapper\n      className={classNames('sinoui-switch', {\n        'sinoui-switch--disabled': disabled,\n        'sinoui-switch--checked': checked,\n      })}\n      disabled={disabled}\n    >\n      <SwitchLabel {...props} />\n      <SwitchTrack\n        className=\"sinoui-switch__track\"\n        disabled={disabled}\n        checked={checked}\n        color={color}\n      />\n    </Wrapper>\n  );\n}\n","import Switch from './Switch';\n\nexport default Switch;\n","import React, { useState, useCallback } from 'react';\nimport Switch from '../src';\n\nexport default function Demo() {\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = useCallback((event) => {\n    setChecked(event.target.checked);\n  }, []);\n\n  return <Switch checked={checked} value=\"switch1\" onChange={handleChange} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport Switch from '../src/Switch';\n\nexport default function SwitchDemo() {\n  const [checked, setChecked] = useState<{ [name: string]: boolean }>({\n    switch3: true,\n  });\n  const handleChange = useCallback(\n    (event, name) => {\n      const newChecked = { ...checked, [name]: event.target.checked };\n      setChecked(newChecked);\n    },\n    [checked],\n  );\n  return (\n    <>\n      <Switch\n        checked={checked.switch1}\n        value=\"switch1\"\n        onChange={(event) => handleChange(event, 'switch1')}\n      />\n      <Switch\n        checked={checked.switch2}\n        value=\"switch2\"\n        onChange={(event) => handleChange(event, 'switch2')}\n        color=\"accent\"\n      />\n      <Switch\n        checked={checked.switch3}\n        value=\"switch3\"\n        onChange={(event) => handleChange(event, 'switch3')}\n        color=\"success\"\n      />\n      <Switch\n        checked={checked.switch4}\n        value=\"switch4\"\n        onChange={(event) => handleChange(event, 'switch4')}\n        color=\"error\"\n      />\n      <Switch\n        checked={checked.switch5}\n        value=\"switch5\"\n        onChange={(event) => handleChange(event, 'switch5')}\n        color=\"info\"\n      />\n      <Switch\n        checked={checked.switch6}\n        value=\"switch6\"\n        onChange={(event) => handleChange(event, 'switch6')}\n        color=\"warning\"\n      />\n    </>\n  );\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport Demo from './Demo';\nimport SwitchDemo from './SwitchDemo';\nimport Switch from '../src/Switch';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"sinouiswitch\"\n    }}>{`@sinoui/switch`}</h1>\n    <p>{`开关控件,此组件为受控组件。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinoui/switch\"\n      }}><img alt=\"npm version\" src=\"https://img.shields.io/npm/v/@sinoui/switch\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinoui/switch\"\n      }}><img alt=\"downloads\" src=\"https://img.shields.io/npm/dm/@sinoui/switch\" /></a></p>\n    <h2 {...{\n      \"id\": \"依赖安装\"\n    }}>{`依赖安装`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add @sinoui/switch\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"入门示例\"\n    }}>{`入门示例`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import Switch from '@sinoui/switch';\n\nfunction Demo() {\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = useCallback((event) => {\n    setChecked(event.target.checked);\n  }, []);\n\n  return <Switch checked={checked} value=\"switch1\" onChange={handleChange} />;\n}\n`}</code></pre>\n    <Playground __position={0} __code={'<Demo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Demo,\n      SwitchDemo,\n      Switch\n    }} mdxType=\"Playground\">\n  <Demo mdxType=\"Demo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"颜色切换\"\n    }}>{`颜色切换`}</h2>\n    <p><inlineCode parentName=\"p\">{`Switch`}</inlineCode>{`组件颜色规范不仅支持`}<inlineCode parentName=\"p\">{`Material Designer`}</inlineCode>{`的`}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`accent`}</inlineCode>{`,\n又支持`}<inlineCode parentName=\"p\">{`Bootstrap`}</inlineCode>{`的`}<inlineCode parentName=\"p\">{`success`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`error`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`warning`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`info`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`danger`}</inlineCode>{`。\n使用时可直接给 Switch 组件指定相应的`}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`属性即可。除了上述提到的色系之外，Switch 的`}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`属性可以是任意颜色值,组件在`}<inlineCode parentName=\"p\">{`checked`}</inlineCode>{`状态下会应用指定的色值。`}</p>\n    <p><inlineCode parentName=\"p\">{`SwitchDemo.tsx`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState, useCallback } from 'react';\nimport Switch from '@sinoui/switch';\n\nexport default function SwitchDemo() {\n  const [checked, setChecked] = useState<{ [name: string]: boolean }>({\n    switch3: true,\n  });\n  const handleChange = useCallback(\n    (event, name) => {\n      const newChecked = { ...checked, [name]: event.target.checked };\n      setChecked(newChecked);\n    },\n    [checked],\n  );\n  return (\n    <>\n      <Switch\n        checked={checked.switch1}\n        value=\"switch1\"\n        onChange={(event) => handleChange(event, 'switch1')}\n      />\n      <Switch\n        checked={checked.switch2}\n        value=\"switch2\"\n        onChange={(event) => handleChange(event, 'switch2')}\n        color=\"accent\"\n      />\n      <Switch\n        checked={checked.switch3}\n        value=\"switch3\"\n        onChange={(event) => handleChange(event, 'switch3')}\n        color=\"success\"\n      />\n      <Switch\n        checked={checked.switch4}\n        value=\"switch4\"\n        onChange={(event) => handleChange(event, 'switch4')}\n        color=\"error\"\n      />\n      <Switch\n        checked={checked.switch5}\n        value=\"switch5\"\n        onChange={(event) => handleChange(event, 'switch5')}\n        color=\"info\"\n      />\n      <Switch\n        checked={checked.switch6}\n        value=\"switch6\"\n        onChange={(event) => handleChange(event, 'switch6')}\n        color=\"warning\"\n      />\n  );\n}\n`}</code></pre>\n    <Playground __position={1} __code={'<SwitchDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Demo,\n      SwitchDemo,\n      Switch\n    }} mdxType=\"Playground\">\n  <SwitchDemo mdxType=\"SwitchDemo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"不可用状态\"\n    }}>{`不可用状态`}</h2>\n    <Playground __position={2} __code={'<Switch disabled value=\\\"switch1\\\" />\\n<Switch disabled checked value=\\\"switch2\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Demo,\n      SwitchDemo,\n      Switch\n    }} mdxType=\"Playground\">\n  <Switch disabled value=\"switch1\" mdxType=\"Switch\" />\n  <Switch disabled checked value=\"switch2\" mdxType=\"Switch\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"与sinouisinoui-components-forms-集成\"\n    }}>{`与@sinoui/sinoui-components-forms 集成`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://sinoui.github.io/sinoui-forms-library/sinoui-components-forms\"\n      }}>{`@sinoui/sinoui-components-forms`}</a>{`是以`}<inlineCode parentName=\"p\">{`sinoui-components`}</inlineCode>{`为基础的表单控件库。\n`}<inlineCode parentName=\"p\">{`Switch`}</inlineCode>{`与`}<inlineCode parentName=\"p\">{`@sinoui/sinoui-components-forms`}</inlineCode>{`的集成方式如下：`}</p>\n    <p>{`首先定义`}<inlineCode parentName=\"p\">{`SwitchField`}</inlineCode>{`组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useCallback } from 'react';\nimport { useFieldValue } from '@sinoui/rx-form-state';\nimport { Field } from '@sinoui/sinoui-components-forms';\nimport Switch from '@sinoui/switch';\n\nexport default function SwitchField(props) {\n  const { name, value, unCheckedValue } = props;\n  const fieldValue = useFieldValue(name);\n\n  const valueExtract = useCallback(\n    (event) => {\n      const { checked } = event.target;\n      return checked ? value : unCheckedValue;\n    },\n    [value, unCheckedValue],\n  );\n  return (\n    <Field\n      as={Switch}\n      checked={fieldValue === value}\n      valueExtract={valueExtract}\n      defaultValue=\"\"\n      {...props}\n    />\n  );\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Form, FormItem, Label } from '@sinoui/sinoui-components-forms';\nimport SwitchField from './SwitchField';\n\nfunction Demo() {\n  return (\n    <Form>\n      <FormItem>\n        <Label>显示农历</Label>\n        <SwitchField name=\"showLunar\" />\n      </FormItem>\n    </Form>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"自定义样式\"\n    }}>{`自定义样式`}</h2>\n    <p><inlineCode parentName=\"p\">{`Switch`}</inlineCode>{`组件的样式规范是参照`}<a parentName=\"p\" {...{\n        \"href\": \"https://material.io/components/selection-controls/#switches\"\n      }}>{`material designe | Switches`}</a>{`实现。\n`}<inlineCode parentName=\"p\">{`DOM结构`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<span class=\"sinoui-switch\">\n  <span class=\"sinoui-switch__label\">\n    <input class=\"sinoui-switch__input\" />\n    <span class=\"sinoui-switch__thumb\" />\n  </span>\n  <span class=\"sinoui-switch__track\" />\n</span>\n`}</code></pre>\n    <p>{`如果我们需要自定义样式，不如改变圆点的尺寸，可以使用定义 css 文件指定其对应颜色，然后将 css 文件引入到使用 Switch 组件的文件中即可：\n`}<inlineCode parentName=\"p\">{`Switch.css`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.sinoui-switch__thumb {\n  height: 16px;\n  width: 16px;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}